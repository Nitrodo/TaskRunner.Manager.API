// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskRunner.Manager.Infrastructure.Persitence;

#nullable disable

namespace TaskRunner.Manager.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaskRunner.Manager.Domain.Entities.ProcessDefinition", b =>
                {
                    b.Property<int>("ProcessId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FunctionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRetryAllowed")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("ProcessId");

                    b.HasIndex("TaskId");

                    b.ToTable("ProcessDefinitions");
                });

            modelBuilder.Entity("TaskRunner.Manager.Domain.Entities.TaskDefinition", b =>
                {
                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TaskId");

                    b.ToTable("TaskDefinitions");
                });

            modelBuilder.Entity("TaskRunner.Manager.Domain.Entities.ProcessDefinition", b =>
                {
                    b.HasOne("TaskRunner.Manager.Domain.Entities.TaskDefinition", "TaskDefinition")
                        .WithMany("ProcessDefinitions")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskDefinition");
                });

            modelBuilder.Entity("TaskRunner.Manager.Domain.Entities.TaskDefinition", b =>
                {
                    b.Navigation("ProcessDefinitions");
                });
#pragma warning restore 612, 618
        }
    }
}
